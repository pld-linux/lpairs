--- lpairs-1.0.4/lpairs/sdl.c.orig	2001-03-16 19:48:14.000000000 +0100
+++ lpairs-1.0.4/lpairs/sdl.c	2016-09-07 16:01:02.420830871 +0200
@@ -31,7 +31,7 @@ int cur_time, last_time;
 // sdl surface //
 
 /* return full path of bitmap */
-inline void get_full_bmp_path( char *full_path, char *file_name )
+void get_full_bmp_path( char *full_path, char *file_name )
 {
     sprintf(full_path,  "%sgfx/%s", SRC_DIR, file_name );
 }
@@ -110,7 +110,7 @@ int disp_format(SDL_Surface *sur)
 /*
     lock surface
 */
-inline void lock_surf(SDL_Surface *sur)
+void lock_surf(SDL_Surface *sur)
 {
     if (SDL_MUSTLOCK(sur))
         SDL_LockSurface(sur);
@@ -119,7 +119,7 @@ inline void lock_surf(SDL_Surface *sur)
 /*
     unlock surface
 */
-inline void unlock_surf(SDL_Surface *sur)
+void unlock_surf(SDL_Surface *sur)
 {
     if (SDL_MUSTLOCK(sur))
         SDL_UnlockSurface(sur);
@@ -354,7 +354,7 @@ int write_text(Font *fnt, SDL_Surface *d
 /*
     lock font surface
 */
-inline void lock_font(Font *fnt)
+void lock_font(Font *fnt)
 {
     if (SDL_MUSTLOCK(fnt->pic))
         SDL_LockSurface(fnt->pic);
@@ -363,7 +363,7 @@ inline void lock_font(Font *fnt)
 /*
     unlock font surface
 */
-inline void unlock_font(Font *fnt)
+void unlock_font(Font *fnt)
 {
     if (SDL_MUSTLOCK(fnt->pic))
         SDL_UnlockSurface(fnt->pic);
@@ -480,7 +480,7 @@ void hardware_cap()
 /*
     update rectangle (0,0,0,0)->fullscreen
 */
-inline void refresh_screen(int x, int y, int w, int h)
+void refresh_screen(int x, int y, int w, int h)
 {
     SDL_UpdateRect(sdl.screen, x, y, w, h);
 }
@@ -630,7 +630,7 @@ void wait_for_click()
 /*
     lock surface
 */
-inline void lock_screen()
+void lock_screen()
 {
     if (SDL_MUSTLOCK(sdl.screen))
         SDL_LockSurface(sdl.screen);
@@ -639,7 +639,7 @@ inline void lock_screen()
 /*
     unlock surface
 */
-inline void unlock_screen()
+void unlock_screen()
 {
     if (SDL_MUSTLOCK(sdl.screen))
         SDL_UnlockSurface(sdl.screen);
@@ -648,7 +648,7 @@ inline void unlock_screen()
 /*
     flip hardware screens (double buffer)
 */
-inline void flip_screen()
+void flip_screen()
 {
     SDL_Flip(sdl.screen);
 }
--- lpairs-1.0.4/lpairs/sdl.h.orig	2001-03-16 19:43:22.000000000 +0100
+++ lpairs-1.0.4/lpairs/sdl.h	2016-09-07 16:00:39.709654249 +0200
@@ -40,8 +40,8 @@ typedef struct {
 SDL_Surface* load_surf(char *fname, int f);
 SDL_Surface* create_surf(int w, int h, int f);
 int  disp_format(SDL_Surface *sur);
-inline void lock_surf(SDL_Surface *sur);
-inline void unlock_surf(SDL_Surface *sur);
+void lock_surf(SDL_Surface *sur);
+void unlock_surf(SDL_Surface *sur);
 void blit_surf(void);
 void alpha_blit_surf(int alpha);
 void fill_surf(int c);
@@ -86,8 +86,8 @@ Font* load_font(char *fname);
 Font* load_fixed_font(char *fname, int off, int len, int w);
 void free_font(Font *sfnt);
 int  write_text(Font *sfnt, SDL_Surface *dest, int x, int y, char *str, int alpha);
-inline void lock_font(Font *sfnt);
-inline void unlock_font(Font *sfnt);
+void lock_font(Font *sfnt);
+void unlock_font(Font *sfnt);
 SDL_Rect last_write_rect(Font *fnt);
 int  text_width(Font *fnt, char *str);
 
@@ -116,16 +116,16 @@ void init_sdl( int f );
 void quit_sdl();
 int  set_video_mode( int w, int h, int d, int f );
 void hardware_cap();
-inline void refresh_screen( int x, int y, int w, int h );
+void refresh_screen( int x, int y, int w, int h );
 void refresh_rects();
 void add_refresh_rect(int x, int y, int w, int h);
 void dim_screen(int steps, int delay, int trp);
 void undim_screen(int steps, int delay, int trp);
 int  wait_for_key();
 void wait_for_click();
-inline void lock_screen();
-inline void unlock_screen();
-inline void flip_screen();
+void lock_screen();
+void unlock_screen();
+void flip_screen();
 
 /* cursor */
 /* creates cursor */
